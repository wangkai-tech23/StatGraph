The codes for data processing in Baseline-Model are uploaded in ./Baseline/ROAD. Here are the steps for our data processing:
1. Data preprocessing: The raw data is in ./Dataset/ROAD/raw ROAD and each message can be identified based on Timestamp and ID. baseline/ROAD/Origin_preprocess_ROAD.py is used to preprocess the origin attack datasets, including five only kinds of masquerade attacks: Deal_correlated_signal_attack_masquerade, Deal_max_speedometer_attack_masquerade, Deal_reverse_light_off_attack_masquerade, Deal_reverse_light_on_attack_masquerade and Deal_max_engine_coolant_temp_attack_masquerade.
The generated datasets can be found in the /Dataset/ROAD/ folder with Deal_ prefixion.
2. Image data generating: process_ROAD_to_fig.py is used to process one-dimensional data sequentially into RGB image data.  For each dataset, there are both attack messages and normal messages. If an image is composed entirely of normal messages, we will label it as normal image.  Otherwise, we will label it as attack image.  Therefore, each dataset can generate two sets of image.  Different directory addresses have been set in image_path_attack and image_path_normal to store the generated normal and attack images. The files we used are the preprocessed data files obtained in the previous step.  
3. Dataset partitioning: The directory we used to store all images is ./baseline/ROAD9_9_3-each27. All the normal images named by sequence and generated by the attack dataset are modified to ./baseline/ROAD9_9_3-each27/test/0/. Then, the later part of ./Baseline/ROAD/ process_ROAD_to_fig.py can help us divide the train set, validation set and the test set from all the image data. Each of the first four attack (Deal_correlated_signal_attack_masquerade, Deal_max_speedometer_attack_masquerade, Deal_reverse_light_off_attack_masquerade and Deal_reverse_light_on_attack_masquerade) has three datasets. Hence, we generate the train set, validation set and the test set from the first, second, and third datasets. The ratio of images in training set, validation set and test set for “Deal_max_engine_coolant_temp_attack_masquerade” dataset is 7:2:1. Also, you can change the path and directory name to anything you want by modifying Train_Dir, Val_Dir and Test_Dir.
4. Labels saving for IG: Although the labeling of an image is determined by whether the number of anomalies in the messages that comprise it is not zero, labeling of all data is required for Identification Granularity (IG) detection. For simplicity, since the accuracy of each piece of data is tested only in the test dataset and the normal data does not require the labeling of each piece of data to be recorded, only the labels of attack data need to be recorded. The labels of each data of the attack data image moved to test are stored in test_attack_record in the ./baseline/CarHacking/dataprocess_to_fig.py and the file IG*.csv is generated to record labels.
